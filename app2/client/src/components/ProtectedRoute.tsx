/**
 * ูููู ุญูุงูุฉ ุงูุตูุญุงุช - ูุญูู ุงูุตูุญุงุช ูู ุงููุตูู ุบูุฑ ุงููุตุฑุญ ุจู
 */

import { ReactNode } from "react";
import { useAuth } from "./AuthProvider";
import { ProfessionalLoader } from "./ui/professional-loader";
import { Redirect } from "wouter";

interface ProtectedRouteProps {
  children: ReactNode;
}

export function ProtectedRoute({ children }: ProtectedRouteProps) {
  const { isAuthenticated, isLoading, user } = useAuth();

  console.log('๐ก๏ธ [ProtectedRoute] ูุญุต ุงูุญูุงูุฉ:', {
    isLoading,
    isAuthenticated,
    userEmail: user?.email || 'ุบูุฑ ููุฌูุฏ',
    timestamp: new Date().toISOString()
  });

  // ุฅุธูุงุฑ ุดุงุดุฉ ุงูุชุญููู ุฃุซูุงุก ุงูุชุญูู ูู ุงููุตุงุฏูุฉ
  if (isLoading) {
    console.log('โณ [ProtectedRoute] ูู ุญุงูุฉ ุชุญูููุ ุฅุธูุงุฑ ุดุงุดุฉ ุงูุชุญููู');
    return (
      <div className="min-h-screen flex items-center justify-center">
        <ProfessionalLoader />
      </div>
    );
  }

  // ุฅุฐุง ูู ููู ูุตุงุฏู ุนูููุ ุฅุนุงุฏุฉ ุชูุฌูู ูุตูุญุฉ ุชุณุฌูู ุงูุฏุฎูู
  if (!isAuthenticated) {
    console.log('๐ซ [ProtectedRoute] ุบูุฑ ูุตุงุฏู ุนูููุ ุฅุนุงุฏุฉ ุชูุฌูู ุฅูู /login');
    return <Redirect to="/login" />;
  }

  // ุฅุฐุง ูุงู ูุตุงุฏู ุนูููุ ุฅุธูุงุฑ ุงููุญุชูู
  console.log('โ [ProtectedRoute] ูุตุงุฏู ุนูููุ ุฅุธูุงุฑ ุงููุญุชูู ูููุณุชุฎุฏู:', user?.email);
  return <>{children}</>;
}