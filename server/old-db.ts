import { Pool, neonConfig } from '@neondatabase/serverless';
import { drizzle } from 'drizzle-orm/neon-serverless';
import * as schema from "@shared/schema";
import { DatabaseSecurityGuard } from './database-security';
import { DatabaseRestrictionGuard } from './database-restrictions';

// Configure WebSocket for Neon/Supabase serverless connection - Dynamic import
const wsModule = await import("ws");
neonConfig.webSocketConstructor = wsModule.WebSocket;

const SUPABASE_DATABASE_URL = "postgresql://postgres.wibtasmyusxfqxxqekks:Ay**--772283228@aws-0-us-east-1.pooler.supabase.com:6543/postgres";

const connectionString = SUPABASE_DATABASE_URL;

// ╪и╪п╪б ╪з┘Д┘Е╪▒╪з┘В╪и╪й ╪з┘Д╪п┘И╪▒┘К╪й ┘Д┘Д╪г┘Е╪з┘Ж
DatabaseSecurityGuard.startSecurityMonitoring();

// ╪е┘Ж╪┤╪з╪б ╪к┘В╪▒┘К╪▒ ╪г┘Е┘Ж┘К ╪┤╪з┘Е┘Д
const securityReport = DatabaseSecurityGuard.generateSecurityReport();
if (!securityReport.isSecure) {
  console.error('ЁЯЪи ╪к╪н╪░┘К╪▒ ╪г┘Е┘Ж┘К: ╪з┘Д┘Ж╪╕╪з┘Е ┘К╪н╪к┘И┘К ╪╣┘Д┘Й ╪л╪║╪▒╪з╪к ╪г┘Е┘Ж┘К╪й!');
  securityReport.warnings.forEach(warning => console.error(`тЪая╕П ${warning}`));
}

// ╪к┘Г┘И┘К┘Ж ╪з╪к╪╡╪з┘Д ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к ╪з┘Д╪│╪н╪з╪и┘К╪й
export const pool = new Pool({ connectionString });
export const db = drizzle({ client: pool, schema });